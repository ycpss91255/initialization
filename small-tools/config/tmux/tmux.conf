# Global settings
## start window indexing at zero (default)
set -g base-index 0

## enable wm window titles
set -g set-titles on

## wm window title string (uses statusbar variables)
# set -g set-titles-string "tmux.#I.#W"

## don't close windows. just deactivate them. use respawn-window to reactivate.
#setw -g remain-on-exit on

## Enable vi key bindings
set-option -g status-keys vi
set-option -g mode-keys vi

## Set the color of vi command mode
set-option -g message-command-style fg=yellow,bg=default

## Enable the status line
set-option -g status on

## tell tmux to use 256 colour terminal
set -g default-terminal "screen-256color"

## tmux default shell
set-option -g default-shell "/usr/bin/fish"

## listen for activity on all windows
# set -g bell-action any
set -g bell-action none

## Settings related to the status left string
## Set the status left string to display
## the session number only when it is not 0
# set-option -g status-left "#{?#{!=:#S,0},#S ,}"
set-option -g status-left-length 30
# set-option -g status-left-style default

# ============================================================
# Key bindings

## prefix (Ctrl + s)
set-option -g prefix C-s
bind-key C-s send-prefix
bind-key C-b

## reload settings
bind-key r source-file ~/.tmux.conf\; display-message "~/.tmux.conf"

## detach client
bind-key d detach
bind-key C-d detach

## choose a client to detach
bind-key D choose-client

## enable mouse support
set -g mouse on

## copy mode key bindings
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-selection-and-cancel
bind-key -T copy-mode-vi 'Escape' send-keys -X cancel

## Change to copy mode on Scroll wheel. Makes Swiping work in Termux
# bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

# quick view of processes
bind-key F12 split-window -v "exec htop"

# vim's definition of a horizontal/vertical split is reversed from tmux's
bind-key s split-window -vc "#{pane_current_path}"
bind-key v split-window -hc "#{pane_current_path}"

## resize panes like vim
bind-key -nr M-h resize-pane -L 3
bind-key -nr M-l resize-pane -R 3
bind-key -nr M-k resize-pane -U 1
bind-key -nr M-j resize-pane -D 1

# bind-key -nr M-Left resize-pane -L 3
# bind-key -nr M-Right resize-pane -R 3
# bind-key -nr M-Up resize-pane -U 1
# bind-key -nr M-Down resize-pane -D 1

bind-key M-r command-prompt -I "rename-session "

## alternatively, use better mnemonics for horizontal/vertical splits
# bind-key - split-window -v
# bind-key _ split-window -v
# bind-key | split-window -h

## resize panes like HLJK
# bind-key -r H resize-pane -L 3
# bind-key -r L resize-pane -R 3
# bind-key -r J resize-pane -U 1
# bind-key -r K resize-pane -D 1

## Other
### choose tree
bind-key w choose-tree
### clear screen
bind-key C-l send-keys C-l

## session
### choose session
bind-key '"' choose-session

### new session
bind-key S new-session

### rename session
bind-key M-r command-prompt -I "rename-session "
# bind-key M-r command-prompt -I'#S' "rename-session '%%'"

### move to next/previous session
bind-key -r H switch-client -n
bind-key -r L switch-client -p

# bind-key -r Left switch-client -n
# bind-key -r Right switch-client -p

## window
### choose window
bind-key "'" choose-window

### rename window
bind-key R command-prompt -I "rename-window "

### new window
bind-key c new-window
bind-key C-c new-window

### navigate windows using hl, and ctrl-hl (no prefix)
bind-key -r h select-window -t :-
bind-key -r l select-window -t :+
bind-key -nr C-h select-window -t :-
bind-key -nr C-l select-window -t :+

# bind-key -r Left select-window -t :-
# bind-key -r Right select-window -t :+
# bind-key -nr C-Left select-window -t :-
# bind-key -nr C-Right select-window -t :+
## pane
### navigate panes using jk, and ctrl+jk (no prefix)
bind-key -r k select-pane -t :.- \; display-panes
bind-key -nr C-k select-pane -t :.- \; display-panes
bind-key -r j select-pane -t :.+ \; display-panes
bind-key -nr C-j select-pane -t :.+ \; display-panes

# bind-key -r Up select-pane -t :.- \; display-panes
# bind-key -nr C-Up select-pane -t :.- \; display-panes
# bind-key -r Down select-pane -t :.+ \; display-panes
# bind-key -nr C-Down select-pane -t :.+ \; display-panes

### swap panes
bind-key -r K swap-pane -s :.- \; display-panes
bind-key -r J swap-pane -s :.+ \; display-panes

# bind-key -r Up swap-pane -s :.- \; display-panes
# bind-key -r Down swap-pane -s :.+ \; display-panes

# ============================================================
# Status bar
## Status bar update interval (60 sec)
set -g status-interval 60
set -g status-position top

## Status bar background color
set-option -g status-style bg=colour238

## Window status foreground color and background
setw -g window-status-style fg=white,bg=default

## Current window status foreground, background, and bold text
setw -g window-status-current-style fg=black,bg=white,bold

## Status-right: prefix highlight, date, and time
set-option -g status-right '\
#{prefix_highlight} \
#[fg=white, bg=default] %m/%d %H:%M #[fg=default, bg=default]'
#[fg=white, bg=default] %y-%m-%d %H:%M #[fg=default, bg=default]'

set -g @continuum-restore 'on'
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
## highlight prefix
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'

## tmux-resurrect
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continu'

## tmux-sidebar
# set -g @plugin 'tmux-plugins/tmux-sidebar'

## tmux-copy
# set -g @plugin 'tmux-plugins/tmux-yank'

# Initialize TMUX plugin manager (keep thisline at the very botton of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
